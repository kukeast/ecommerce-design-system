{"ast":null,"code":"var _jsxFileName = \"/Users/dg.sixshop/Desktop/ecommerce-design-system/src/component/inputs/chip/Chip.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { darken } from 'polished';\nimport { COLOR } from '../../../constants/color';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledChip = styled.div`\n    display: inline-flex;\n    align-items: center;\n\n    font-size: 1.5rem;\n    border-radius: 1.7rem;\n    height: 3.4rem;\n    padding: 0 1.2rem;\n\n    ${props => props.selected ? css`\n        background-color: ${props.theme.primary};\n        color: ${COLOR.primary.color};\n        :active{\n            background-color: ${darken(0.05, props.theme.primary)};\n        }\n    ` : css`\n        background-color: ${COLOR.mono.background};\n        color: ${COLOR.mono.color};\n        :active{\n            background-color: ${darken(0.05, COLOR.mono.background)};\n        }\n    `}\n    & + & {\n        margin-left: 0.8rem;\n    }\n    cursor: pointer;\n`;\n_c = StyledChip;\n\nfunction Chip({\n  chips,\n  selectedIndex,\n  onChange\n}) {\n  _s();\n\n  const [selected, setSelected] = useState(chips[selectedIndex]);\n  return /*#__PURE__*/_jsxDEV(StyledChip, {\n    selected: selected,\n    onChange: onChange,\n    children: [chips.map((chip, index) => {\n      /*#__PURE__*/\n      _jsxDEV(Chip, {\n        selected: index == selected && 'selected',\n        children: chip.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this);\n    }), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chip, \"gxUlgdgNnNzve3Ow0oY4og7ahMs=\");\n\n_c2 = Chip;\nexport default Chip;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledChip\");\n$RefreshReg$(_c2, \"Chip\");","map":{"version":3,"sources":["/Users/dg.sixshop/Desktop/ecommerce-design-system/src/component/inputs/chip/Chip.js"],"names":["React","useState","styled","css","darken","COLOR","StyledChip","div","props","selected","theme","primary","color","mono","background","Chip","chips","selectedIndex","onChange","setSelected","map","chip","index","label","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,KAAT,QAAsB,0BAAtB;;AAEA,MAAMC,UAAU,GAAGJ,MAAM,CAACK,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,KAAK,IAAIA,KAAK,CAACC,QAAN,GAAiBN,GAAI;AACpC,4BAA4BK,KAAK,CAACE,KAAN,CAAYC,OAAQ;AAChD,iBAAiBN,KAAK,CAACM,OAAN,CAAcC,KAAM;AACrC;AACA,gCAAgCR,MAAM,CAAC,IAAD,EAAOI,KAAK,CAACE,KAAN,CAAYC,OAAnB,CAA4B;AAClE;AACA,KANe,GAMPR,GAAI;AACZ,4BAA4BE,KAAK,CAACQ,IAAN,CAAWC,UAAW;AAClD,iBAAiBT,KAAK,CAACQ,IAAN,CAAWD,KAAM;AAClC;AACA,gCAAgCR,MAAM,CAAC,IAAD,EAAOC,KAAK,CAACQ,IAAN,CAAWC,UAAlB,CAA8B;AACpE;AACA,KAAM;AACN;AACA;AACA;AACA;AACA,CA1BA;KAAMR,U;;AA4BN,SAASS,IAAT,CAAe;AAAEC,EAAAA,KAAF;AAASC,EAAAA,aAAT;AAAwBC,EAAAA;AAAxB,CAAf,EAAkD;AAAA;;AAC9C,QAAM,CAACT,QAAD,EAAWU,WAAX,IAA0BlB,QAAQ,CAACe,KAAK,CAACC,aAAD,CAAN,CAAxC;AAEA,sBACI,QAAC,UAAD;AACI,IAAA,QAAQ,EAAER,QADd;AAEI,IAAA,QAAQ,EAAES,QAFd;AAAA,eAKQF,KAAK,CAACI,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACvB;AAAA,cAAC,IAAD;AAAM,QAAA,QAAQ,EAAEA,KAAK,IAAIb,QAAT,IAAqB,UAArC;AAAA,kBAAkDY,IAAI,CAACE;AAAvD;AAAA;AAAA;AAAA;AAAA;AACH,KAFD,CALR,EASKC,QATL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAhBQT,I;;MAAAA,I;AAkBT,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react'\nimport styled, { css } from 'styled-components'\nimport { darken } from 'polished'\nimport { COLOR } from '../../../constants/color';\n\nconst StyledChip = styled.div`\n    display: inline-flex;\n    align-items: center;\n\n    font-size: 1.5rem;\n    border-radius: 1.7rem;\n    height: 3.4rem;\n    padding: 0 1.2rem;\n\n    ${props => props.selected ? css`\n        background-color: ${props.theme.primary};\n        color: ${COLOR.primary.color};\n        :active{\n            background-color: ${darken(0.05, props.theme.primary)};\n        }\n    ` : css`\n        background-color: ${COLOR.mono.background};\n        color: ${COLOR.mono.color};\n        :active{\n            background-color: ${darken(0.05, COLOR.mono.background)};\n        }\n    `}\n    & + & {\n        margin-left: 0.8rem;\n    }\n    cursor: pointer;\n`\n\nfunction Chip ({ chips, selectedIndex, onChange}) {\n    const [selected, setSelected] = useState(chips[selectedIndex])\n\n    return(\n        <StyledChip \n            selected={selected}\n            onChange={onChange}\n        >\n            {   \n                chips.map((chip, index) => {\n                    <Chip selected={index == selected && 'selected'}>{chip.label}</Chip>\n                })\n            }\n            {children}\n        </StyledChip>\n    )\n}\n\nexport default Chip\n"]},"metadata":{},"sourceType":"module"}