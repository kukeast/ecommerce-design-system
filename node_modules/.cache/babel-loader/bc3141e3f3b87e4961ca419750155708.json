{"ast":null,"code":"var _jsxFileName = \"/Users/dg.sixshop/Desktop/ecommerce-design-system/src/component/inputs/Button.js\";\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport { darken, lighten } from 'polished';\nimport { gray, red, white } from 'open-color';\nimport GlobalFonts from '../../constants/font/font';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VARIANT = {\n  primary: {\n    background: gray[9],\n    color: white\n  },\n  mono: {\n    background: gray[2],\n    color: gray[9]\n  },\n  warnning: {\n    background: red[5],\n    color: white\n  },\n  text: {\n    background: white,\n    color: gray[9]\n  }\n};\nconst SIZE = {\n  large: {\n    height: '60px'\n  },\n  medium: {\n    height: '52px'\n  },\n  small: {\n    height: '46px'\n  }\n};\nconst SHAPE = {\n  square: {\n    borderRadius: '0'\n  },\n  rounded: {\n    borderRadius: '16px'\n  },\n  pill: {\n    borderRadius: '30px'\n  }\n};\nconst sizeStyles = css`\n    height : ${props => SIZE[props.size].height};\n`;\nconst shapeStyles = css`\n    border-radius : ${props => SHAPE[props.shape].borderRadius};\n    ${props => props.fullWidth && css`\n        width: 100%;\n    `}\n`;\nconst colorStyles = css`\n    ${({\n  theme,\n  variant\n}) => {\n  var background = VARIANT[variant].background;\n  var fontColor = VARIANT[variant].color;\n  const primaryColor = theme['primary'];\n  console.log(primaryColor);\n\n  if (variant === 'primary') {\n    background = primaryColor;\n  } else if (variant === 'text') {\n    fontColor = primaryColor;\n  }\n\n  return css`\n            background: ${background};\n            color: ${fontColor};\n            &:active {\n                background: ${darken(0.05, background)};\n            }\n            &:disabled{\n                background: ${gray[1]};\n                color: ${white};\n            }\n            ${props => props.outline && css`\n                border: 0.1rem solid ${background};\n                background: ${white};\n                color: ${background};\n                &:active {\n                    background: ${lighten(0.2, background)};\n                }\n                &:disabled{\n                    background: ${white};\n                    border: 0.1rem solid ${gray[2]};\n                    color: ${gray[2]};\n                }\n            `}\n        `;\n}}\n`;\nconst StyledButton = styled.button`\n    font-family: 'SpoqaHanSansNeo';\n\n    display: inline-flex;\n    gap: 0.6rem;\n    align-items: center;\n    justify-content: center;\n\n    border: none;\n    box-sizing: border-box;\n    padding: 0 1.6rem;\n\n    font-size: 1.6rem;\n    font-weight: bold;\n    color: white;\n\n    outline: none;\n    cursor: pointer;\n    -webkit-tap-highlight-color: transparent;\n\n    ${sizeStyles}\n    ${colorStyles}\n    ${shapeStyles} \n`;\n_c = StyledButton;\n\nfunction Button({\n  children,\n  variant,\n  type,\n  size,\n  shape,\n  outline,\n  disabled,\n  fullWidth,\n  onClick,\n  ...rest\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalFonts, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n      variant: variant,\n      type: type,\n      size: size,\n      shape: shape,\n      outline: outline,\n      fullWidth: fullWidth,\n      disabled: disabled,\n      ...rest,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_c2 = Button;\nButton.defaultProps = {\n  type: \"button\",\n  variant: 'primary',\n  size: 'medium',\n  shape: 'rounded',\n  outline: false,\n  fullWidth: false,\n  disabled: false\n};\nexport default Button;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledButton\");\n$RefreshReg$(_c2, \"Button\");","map":{"version":3,"sources":["/Users/dg.sixshop/Desktop/ecommerce-design-system/src/component/inputs/Button.js"],"names":["React","styled","css","darken","lighten","gray","red","white","GlobalFonts","VARIANT","primary","background","color","mono","warnning","text","SIZE","large","height","medium","small","SHAPE","square","borderRadius","rounded","pill","sizeStyles","props","size","shapeStyles","shape","fullWidth","colorStyles","theme","variant","fontColor","primaryColor","console","log","outline","StyledButton","button","Button","children","type","disabled","onClick","rest","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled, {css} from 'styled-components'\nimport { darken, lighten } from 'polished';\nimport {gray, red, white} from 'open-color'\nimport GlobalFonts from '../../constants/font/font';\n\nconst VARIANT = {\n    primary : {\n        background: gray[9],\n        color: white\n    },\n    mono : {\n        background: gray[2],\n        color: gray[9]\n    },\n    warnning : {\n        background: red[5],\n        color: white\n    },\n    text : {\n        background: white,\n        color: gray[9]\n    }\n    \n}\n\nconst SIZE = {\n    large : {\n        height : '60px',\n    },\n    medium : {\n        height : '52px',\n    },\n    small : {\n        height : '46px',\n    }\n}\n\nconst SHAPE = {\n    square : {\n        borderRadius : '0',\n    },\n    rounded : {\n        borderRadius : '16px',\n    },\n    pill : {\n        borderRadius : '30px',\n    }\n}\n\nconst sizeStyles = css`\n    height : ${props => SIZE[props.size].height};\n`\n\nconst shapeStyles = css`\n    border-radius : ${props => SHAPE[props.shape].borderRadius};\n    ${props => props.fullWidth && css`\n        width: 100%;\n    `}\n`\n\nconst colorStyles = css`\n    ${({ theme, variant }) => {\n        var background = VARIANT[variant].background\n        var fontColor = VARIANT[variant].color\n        const primaryColor = theme['primary']\n        console.log(primaryColor)\n        if(variant === 'primary'){\n            background = primaryColor\n        }else if(variant === 'text'){\n            fontColor = primaryColor\n        }\n        return css`\n            background: ${background};\n            color: ${fontColor};\n            &:active {\n                background: ${darken(0.05, background)};\n            }\n            &:disabled{\n                background: ${gray[1]};\n                color: ${white};\n            }\n            ${props => props.outline && css`\n                border: 0.1rem solid ${background};\n                background: ${white};\n                color: ${background};\n                &:active {\n                    background: ${lighten(0.2, background)};\n                }\n                &:disabled{\n                    background: ${white};\n                    border: 0.1rem solid ${gray[2]};\n                    color: ${gray[2]};\n                }\n            `}\n        `\n    }}\n`\n\nconst StyledButton = styled.button`\n    font-family: 'SpoqaHanSansNeo';\n\n    display: inline-flex;\n    gap: 0.6rem;\n    align-items: center;\n    justify-content: center;\n\n    border: none;\n    box-sizing: border-box;\n    padding: 0 1.6rem;\n\n    font-size: 1.6rem;\n    font-weight: bold;\n    color: white;\n\n    outline: none;\n    cursor: pointer;\n    -webkit-tap-highlight-color: transparent;\n\n    ${sizeStyles}\n    ${colorStyles}\n    ${shapeStyles} \n`\n\nfunction Button({ children, variant, type, size, shape, outline, disabled, fullWidth, onClick, ...rest }) {\n    return (\n        <>\n            <GlobalFonts/>\n            <StyledButton \n                variant={variant} \n                type={type}\n                size={size} \n                shape={shape}\n                outline={outline}\n                fullWidth={fullWidth}\n                disabled={disabled}\n                {...rest}\n            >\n                {children}\n            </StyledButton>\n        </>\n    )\n}\n\nButton.defaultProps = {\n    type: \"button\",\n    variant: 'primary',\n    size: 'medium',\n    shape: 'rounded',\n    outline: false,\n    fullWidth: false,\n    disabled: false,\n}\n\nexport default Button\n"]},"metadata":{},"sourceType":"module"}